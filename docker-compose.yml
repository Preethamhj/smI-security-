version: '3.8'

services:
  # --------------------------------------------------------------------------
  # 1. MongoDB Database Service
  # --------------------------------------------------------------------------
  mongo:
    image: mongo:6-bookworm
    container_name: security-scanner-mongodb
    restart: unless-stopped
    environment:
      # Use the same credentials you set in backend/.env
      MONGO_INITDB_ROOT_USERNAME: "YOUR_DB_USER_HERE" 
      MONGO_INITDB_ROOT_PASSWORD: "YOUR_DB_PASSWORD_HERE"
      MONGO_INITDB_DATABASE: "securityScannerDB" 
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017" # Expose for local development/tools

  # --------------------------------------------------------------------------
  # 2. Backend API Service (Accepts requests, validates, stores in MongoDB)
  # --------------------------------------------------------------------------
  backend:
    build:
      context: . # Build context is the root directory
      dockerfile: backend/Dockerfile.backend
    container_name: security-scanner-backend
    restart: unless-stopped
    # Mount backend source code for development (optional, but useful)
    volumes:
      - ./backend:/app
      - /app/node_modules # Keep node_modules outside of volume sync
    # Environment variables from local .env are used in development, but you
    # can pass them explicitly here for production consistency.
    env_file:
      - ./backend/.env
    ports:
      - "3000:3000"
    depends_on:
      - mongo
    command: npm run dev # Use nodemon for development speed

  # --------------------------------------------------------------------------
  # 3. Scan Worker/Orchestrator Service (Runs the security tools)
  # --------------------------------------------------------------------------
  worker:
    build:
      context: . # Build context is the root directory
      dockerfile: Dockerfile.worker # Use the Worker Dockerfile
    container_name: security-scanner-worker
    restart: unless-stopped
    volumes:
      - ./backend:/app # Mount the backend code (models, controllers, services)
      - /app/node_modules
      - ./backend/src/temp:/app/src/temp # Volume for temporary scan files
    env_file:
      - ./backend/.env
    depends_on:
      - mongo
      # IMPORTANT: Since there's no BullMQ, the worker won't run continuously yet.
      # Its command will be defined in a later phase when you add the queuing system.
      # For now, it will just start and stop.
    command: "echo 'Worker image built successfully. Ready for queuing system integration.'"

volumes:
  mongo_data: